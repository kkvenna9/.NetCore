@page
@model IndexModel
@{
    ViewData["Title"] = "Main";
}

@*https://codepen.io/thomvallez/pen/NqyqWV*@


<link href="~/css/weather.css" rel="stylesheet" />
<div class="text-center">
    <h1 class="display-4">Oslo</h1>

    <p id="myjosn" style="display:none;">@ViewData["Message"]</p>


    <div class="containerex" id="mydiv">
    </div>

    <br />
    <p>
        Credit (weather template): Colin Espinas  https://codepen.io/Call_in <br />
        Weather API: Meteorologisk institutt  https://www.met.no/
    </p>
    <br />
    <p> Azure - Docker compose sample</p>
</div>

<script type="text/javascript">
    loadData();
    function loadData() {
        var obj, dbParam, xmlhttp, myObj, x, txt = "", firstitem;

        var check = document.getElementById('myjosn');
        var tempjson = JSON.parse(check.innerHTML);//finlly
        try {
            myObj = JSON.parse(tempjson);
        } catch (e) {
            myObj = tempjson;//case dummy
        }

        if (myObj != null && myObj.length > 0) {//we ahve data

            txt += getweathersidehtml(myObj[0]);
            txt += " <div class='info-side'>";
            txt += getweatherinfohtml(myObj[0]);
            //txt += Getweakcontainer(myObj[0]);
            txt += GetLocationHtml();
            txt += "</div>";

            setTimeout(function () { setBackgroundColo(); }, 900);

        }

        document.getElementById("mydiv").innerHTML = txt;
    }

    function getweathersidehtml(wsobj) {

        var html = "<div class='weather-side'>" +
            "<div class='weather-gradient' ></div >" +
            "<div class='date-container'>" +
            "<h2 class='date-dayname'>" + wsobj.dayText + "</h2><span class='date-day'>" + wsobj.dateYearString + "</span><i class='location-icon' data-feather='map-pin'>" +
            "</i>" +
            "</div>" +
            "<div class='weather-container'>" +
            "<img src='" + GetImagePathByKey(wsobj.summary.symbol_code) + "' width='180' height='180' id='myimg_'/>" +
            "<i class='weather-icon' data-feather='sun'></i>" +
            "<h1 class='weather-temp'>" + wsobj.instant.details.air_temperature + "</h1>" +
            "<h3 class='weather-desc'>" + wsobj.summary.symbol_code + "</h3>" +
            "</div>" +
            "</div >";
        return html;
    }

    function getweatherinfohtml(wobj) {


        var text = "<div class='today-info - container'>" +
            "<div class='today-info' >" +
            "<div class='precipitation'>" +
            "<span class='title'>PRECIPITATION</span><span class='value'>" + wobj.preception + " %</span>" +
            "<div class='clear'></div>" +
            "</div>" +
            "<div class='humidity'>" +
            "<span class='title'>HUMIDITY</span><span class='value'>" + wobj.instant.details.relative_humidity + " %</span>" +
            "<div class='clear'></div>" +
            " </div>" +
            " <div class='wind'>" +
            " <span class='title'>WIND</span><span class='value'>" + wobj.instant.details.wind_speed + " m/s</span>" +
            "<div class='clear'></div>" +
            " </div>" +
            "</div >" +
            "</div > "
        return text;
    }

    function Getweakcontainer(tobj) {

        var week = "<div class='week-container'>" +
            "<ul class='week-list'>" +
            "<li class='active'><i class='day-icon' data-feather='sun'></i><span class='day-name'>Tue</span><span class='day-temp'>29°C</span></li>" +
            "<li><i class='day-icon' data-feather='cloud'></i><span class='day-name'>Wed</span><span class='day-temp'>21°C</span></li>" +
            "<li><i class='day-icon' data-feather='cloud-snow'></i><span class='day-name'>Thu</span><span class='day-temp'>08°C</span></li>" +
            "<li><i class='day-icon' data-feather='cloud-rain'></i><span class='day-name'>Fry</span><span class='day-temp'>19°C</span></li>" +
            "<div class='clear'></div>" +
            "</ul>" +
            "</div>"
        return week;
    }

    function GetLocationHtml() {

        var tetx = "<div class='location-container'>" +
            "<span style='font-size:larger;'>Norway - Oslo</span>" +
            " </div>";
        return tetx;
    }
    function GetImagePathByKey(value) {

        return "/wicons/png/" + value + ".png";
    }

    function setBackgroundColo() {
        var img_ = document.getElementById("myimg_");
        var rgb = getAverageRGB(img_);

        var myList = document.getElementsByClassName("weather-gradient"); // get all p elements

        // this loops through them until it finds one with the class 'icontitle' then it assigns the style to it
        var i = 0;
        while (i < myList.length) {
            if (myList[i].className == "weather-gradient") {
                myList[i].style.backgroundColor = 'rgb(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ')';
            }
            i++;
        }
    }

    function getAverageRGB(imgEl) {

        var blockSize = 5, // only visit every 5 pixels
            defaultRGB = { r: 0, g: 0, b: 0 }, // for non-supporting envs
            canvas = document.createElement('canvas'),
            context = canvas.getContext && canvas.getContext('2d'),
            data, width, height,
            i = -4,
            length,
            rgb = { r: 0, g: 0, b: 0 },
            count = 0;

        if (!context) {
            return defaultRGB;
        }

        height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;
        width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;

        context.drawImage(imgEl, 0, 0);

        try {
            data = context.getImageData(0, 0, width, height);
        } catch (e) {
        /* security error, img on diff domain */alert('x');
            return defaultRGB;
        }

        length = data.data.length;

        while ((i += blockSize * 4) < length) {
            ++count;
            rgb.r += data.data[i];
            rgb.g += data.data[i + 1];
            rgb.b += data.data[i + 2];
        }

        // ~~ used to floor values
        rgb.r = ~~(rgb.r / count);
        rgb.g = ~~(rgb.g / count);
        rgb.b = ~~(rgb.b / count);

        return rgb;

    }
</script>
